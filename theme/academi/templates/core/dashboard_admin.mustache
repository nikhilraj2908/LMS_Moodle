{{! Dynamic Administrator Dashboard — templates/core/dashboard_admin.mustache }}

<style>
  :root {
    --primary: #204070;
    --secondary: #3C6894;
    --accent: #6D95FF;
    --light: #F0F6FC;
    --dark: #1C3C72;
    --success: #28a745;
    --border-radius: 16px;
    --transition: all 0.3s ease;
  }
 
  
  .admin-container { max-width:1800px; margin:30px auto; padding:0 20px 40px; }
  .dashboard-header {
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    color: white; padding:20px 30px; border-radius:var(--border-radius);
    box-shadow:0 4px 20px rgba(0,0,0,0.1);
    display:flex; justify-content:space-between; align-items:center;
    margin-bottom:25px;
  }
  .dashboard-header .user-info { display:flex; align-items:center; gap:15px; }
  .dashboard-header .user-info .avatar {
    width:60px; height:60px; border-radius:50%; background:var(--accent);
    display:flex; align-items:center; justify-content:center; font-size:24px;
    color:white; box-shadow:0 4px 10px rgba(0,0,0,0.15);
  }
  .dashboard-header h3 { font-size:1.8rem; font-weight:700; }
  .dashboard-header small { display:block; opacity:.85; margin-top:5px; }
  .header-controls { display:flex; align-items:center; gap:15px; }
  .date-display {
    background: rgba(255,255,255,0.15); padding:8px 15px; border-radius:30px;
    font-weight:500; display:flex; align-items:center; gap:8px;
  }
 
  .btn:hover { transform:translateY(-2px); box-shadow:0 6px 15px rgba(32,64,112,0.15); }
  .admin-card {
    background:white; border-radius:var(--border-radius); padding:25px;
    box-shadow:0 8px 25px rgba(32,64,112,0.05); transition:var(--transition);
  
  }
  .admin-card:hover { transform:translateY(-5px); box-shadow:0 12px 30px rgba(32,64,112,0.15); }
  .row { display:flex; flex-wrap:wrap; margin:0 -12px; }
  .col-md-3, .col-md-4, .col-md-8, .col-lg-4, .col-lg-8 { padding:0 12px; margin-bottom:24px; }
  .col-md-3 { width:25%; } .col-md-4 { width:33.333%; } .col-md-8 { width:66.666%; }
  .col-lg-4 { width:33.333%; } .col-lg-8 { width:66.666%; }
  @media (max-width:1200px) { .col-md-3, .col-md-4, .col-md-8 { width:50%; } }
  @media (max-width:768px) {
    .col-md-3, .col-md-4, .col-md-8, .col-lg-4, .col-lg-8 { width:100%; }
    .dashboard-header { flex-direction:column; text-align:center; gap:15px; }
    .header-controls, .user-info { flex-direction:column; }
  }

  /* Stat cards */
  .stat-card { text-align:center; display:flex; flex-direction:column; justify-content:center; }
  .stat-icon {
    font-size:2.5rem; color:var(--accent);
    background:rgba(109,149,255,0.1); width:80px; height:80px; border-radius:50%;
    display:flex; align-items:center; justify-content:center; margin:0 auto 15px;
    transition:var(--transition);
  }
  .stat-card:hover .stat-icon { transform:scale(1.1); }
  .stat-value { font-size:2.8rem; font-weight:800; color:var(--primary); line-height:1; }
  .stat-label { opacity:.7; margin-top:5px; }

  /* Recent managers */
  .card-header { display:flex; justify-content:space-between; align-items:center; margin-bottom:20px; border-bottom:1px solid rgba(0,0,0,0.05); padding-bottom:15px; }
  .card-header h2 { display:flex; align-items:center; gap:10px; font-size:1.5rem; color:var(--dark); }
  .manager-card {
    display:flex; align-items:center; padding:15px; margin-bottom:15px;
    background:rgba(248,251,255,1); border-radius:15px;
    box-shadow:0 3px 8px rgba(0,0,0,0.03); transition:var(--transition);
  }
  .manager-card:hover { background:#E6F0FF; transform:translateX(5px); }
  .manager-avatar {
    width:60px; height:60px; border-radius:50%; background:rgba(32,64,112,0.05);
    display:flex; align-items:center; justify-content:center; font-size:2rem; color:var(--secondary);
    margin-right:15px;
  }
  .manager-name { font-weight:700; color:var(--dark); }
  .manager-region { color:var(--secondary); font-size:.9rem; display:flex; align-items:center; gap:5px; }
  .manager-region i { font-size:.8rem; }

  /* System chart */
  .chart-container { height:250px; position:relative; margin-top:15px; }

  /* Online users */
  .online-users-card { display:flex; flex-direction:column; }
  .online-header { display:flex; justify-content:space-between; align-items:center; margin-bottom:15px; }
  .online-count {
    background:rgba(109,149,255,0.1); color:var(--accent);
    padding:5px 15px; border-radius:20px; font-weight:600; font-size:.9rem;
  }
  .online-users-list { overflow-y:auto; max-height:300px; padding-right:5px; }
  .online-user {
    display:flex; align-items:center; padding:12px 15px; margin-bottom:10px;
    background:rgba(240,246,252,0.5); border-radius:12px; transition:var(--transition);
  }
  .online-user:hover { background:rgba(109,149,255,0.1); transform:translateX(3px); }
  .online-user-avatar {
    width:45px; height:45px; border-radius:50%; background:var(--accent);
    display:flex; align-items:center;  font-weight:600; color:white;
    margin-right:15px;
  }
  .online-user-info { flex-grow:1; }
  .online-user-name { font-weight:600; color:var(--dark); }
  .online-user-role { font-size:.85rem; color:var(--secondary); display:flex; align-items:center; gap:5px; }
  .online-user-role i { font-size:.9rem; }
  .online-status {
    font-size:.8rem; color:var(--success); font-weight:500; display:flex; align-items:center; gap:6px;
  }
  .online-status::before {
    content:""; width:8px; height:8px; background:var(--success); border-radius:50%;
  }
  .online-user-actions { display:flex; gap:10px; margin-left:15px; }
  .action-btn {
    width:36px; height:36px; border:none; border-radius:50%; background:rgba(109,149,255,0.1);
    display:flex; align-items:center; justify-content:center; color:var(--accent);
    cursor:pointer; transition:var(--transition);
  }
  .action-btn:hover { background:var(--accent); color:white; transform:scale(1.1); }

  .quick-link {
  display:flex; align-items:center; padding:12px 15px; margin-bottom:12px;
  border-radius:12px; background:#F8FBFF; color:var(--dark); text-decoration:none;
  transition:all .3s;
}
.quick-link:hover { background:var(--accent); color:white; transform:translateX(5px); }
.quick-link i { margin-right:12px; font-size:1.2rem; width:30px; text-align:center; }


/* Add these new styles to your existing CSS */
  .log-table-container {
    max-height: 400px;
    overflow-y: auto;
    margin-top: 20px;
    border: 1px solid rgba(0,0,0,0.05);
    border-radius: var(--border-radius);
    background: white;
  }
  
  .log-table {
    width: 100%;
    border-collapse: collapse;
  }
  
  .log-table th {
    position: sticky;
    top: 0;
    background: var(--light);
    padding: 12px 15px;
    text-align: left;
    font-weight: 600;
    color: var(--dark);
    border-bottom: 2px solid rgba(0,0,0,0.05);
  }
  
  .log-table td {
    padding: 10px 15px;
    border-bottom: 1px solid rgba(0,0,0,0.03);
  }
  
  .log-table tr:hover {
    background: rgba(109,149,255,0.03);
  }
  
  .log-controls {
    display: flex;
    gap: 12px;
    align-items: center;
    margin-top: 15px;
  }
  
  .log-duration-select {
    background: rgba(109,149,255,0.1);
    border: none;
    padding: 8px 15px;
    border-radius: 30px;
    color: var(--dark);
    font-weight: 500;
  }
  
  .log-duration-select:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(109,149,255,0.3);
  }
  
  .no-logs {
    text-align: center;
    padding: 30px;
    color: var(--secondary);
    opacity: 0.7;
  }
  .btn-primary {
    font-family: Arial, Helvetica, sans-serif;
    color: #fff;
    text-shadow: none;
    background: #204070;
    padding: 4px 8px; 
    border: 0;
    box-shadow: none;
    margin-left:10px;
}

/* 1) define the slide‐up keyframes */
@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 2) apply to all cards */
.admin-card {
  opacity: 0;                   /* start hidden */
  animation: slideUp 0.6s ease-out forwards;
  /* if you want a base delay for all cards, uncomment next line: */
  /* animation-delay: 0.2s; */
}

/* 3) stagger each card a bit (optional) */
.admin-container .admin-card:nth-of-type(1) { animation-delay: 0.1s; }
.admin-container .admin-card:nth-of-type(2) { animation-delay: 0.2s; }
.admin-container .admin-card:nth-of-type(3) { animation-delay: 0.3s; }
.admin-container .admin-card:nth-of-type(4) { animation-delay: 0.4s; }
/* add more rules if you have more cards */

</style>

<div class="admin-container">

  <!-- Header -->
  <div class="dashboard-header">
    <div class="user-info my-1">
      <div class="d-flex">
         {{{userpicture}}}
        <div>
          <h3 style="color:white;">{{username}}</h3>
          <small>Administrator Dashboard</small>
        </div>
      </div>
    </div>
    <div class="header-controls">
      <div class="date-display">
        <i class="fas fa-calendar-day"></i> {{date}}
      </div>
    
    </div>
  </div>

  <!-- Top Stats -->
  <div class="row">
    <div class="col-md-3">
      <div class="admin-card stat-card">
        <div class="stat-icon"><i class="fas fa-globe-americas"></i></div>
        <div class="stat-value">{{regionCount}}</div>
        <div class="stat-label">Total Regions</div>
      </div>
    </div>
    <div class="col-md-3">
      <div class="admin-card stat-card">
        <div class="stat-icon"><i class="fas fa-user-tie"></i></div>
        <div class="stat-value">{{regionMgrCount}}</div>
        <div class="stat-label">Regional Managers</div>
      </div>
    </div>
    <div class="col-md-3">
      <a href="{{allUsersUrl}}" class="text-decoration-none">
        <div class="admin-card stat-card">
          <div class="stat-icon"><i class="fas fa-users"></i></div>
          <div class="stat-value">{{activeUserCount}}</div>
          <div class="stat-label">All Users</div>
        </div>
      </a>
    </div>
    <div class="col-md-3">
      <div class="admin-card stat-card">
        <div class="stat-icon"><i class="fas fa-user-clock"></i></div>
        <div class="stat-value">{{onlineUserCount}}</div>
        <div class="stat-label">Online Users</div>
      </div>
    </div>
  </div>

  <div class="row">
    <!-- Recent Managers -->
    <div class="col-lg-8">
      <div class="admin-card">
        <div class="card-header">
          <h2><i class="fas fa-user-tie"></i>Regional Managers</h2>
        </div>
        {{#recentRegionManagers}}
  <div class="manager-card">
    {{{avatarhtml}}}
    <div class="manager-info">
      <div class="manager-name">{{username}}</div>
      <div class="manager-region"><i class="fas fa-map-marker-alt"></i> {{regionname}}</div>
    </div>
  </div>
{{/recentRegionManagers}}

        {{^recentRegionManagers}}
          <p class="no-online"><i class="fas fa-user-slash"></i><br>No managers found.</p>
        {{/recentRegionManagers}}
      </div>

      

<div class="admin-card mt-4">
  <div class="card-header">
    <h2><i class="fas fa-chart-line"></i> Region-Based User Report</h2>
  </div>

  <!-- Region Selection -->
  <div class="d-flex gap-2 flex-wrap mb-3 align-items-center">
    <div class="d-flex gap-2 align-items-center">
      <label for="regionSelect" class="form-label mb-0">Select Region:</label>
      <select id="regionSelect" class="form-select  form-select-lg p-1 ms-2" style="width: 200px;">
    <option value="0" {{^selectedRegionId}}selected{{/selectedRegionId}}>All Regions</option>
    {{#regions}}
        <option value="{{id}}" {{#selected}}selected{{/selected}}>{{name}}</option>
        {{#subregions}}
            <option value="{{id}}" {{#selected}}selected{{/selected}}>&nbsp;&nbsp;&nbsp;{{name}}</option>
        {{/subregions}}
    {{/regions}}
</select>
    </div>
    <a  class="btn btn-sm btn-danger ms-auto">
      <i class="fas fa-download"></i> Export Report
    </a>
    <a class="btn btn-sm btn-primary " id="mailReportBtn">
  <i class="fas fa-envelope"></i> Mail Report
</a>
  </div>

  <!-- Report Table -->
  <div class="log-table-container">
    <table class="log-table">
      <thead>
        <tr>
          <th>User</th>
          <th>Course</th>
          <th>Region</th>
          <th>Score</th>
       
          <th>Progress</th>
          <th>Status</th>
        </tr>
      </thead>
      <tbody id="reportTableBody">
        {{#reportData}}
        <tr>
          <td>{{username}}</td>
          <td>{{coursename}}</td>
          <td>{{region}}</td>
          <td>{{score}}%</td>
         
          <td>
            <div style="width:100px; background:#eee; border-radius:10px;">
              <div style="width:{{progress}}%; background:#204070; height:8px; border-radius:10px;"></div>
            </div>
            <small>{{progress}}%</small>
          </td>
          <td>
            {{#is_completed}}<span style="color:green;">Completed</span>{{/is_completed}}
            {{#is_progress}}<span style="color:orange;">In Progress</span>{{/is_progress}}
            {{#is_review}}<span style="color:red;">Needs Review</span>{{/is_review}}
          </td>
        </tr>
        {{/reportData}}

        {{^reportData}}
          <tr>
            <td colspan="7" style="text-align:center; padding:20px;">
              No users found in selected region
            </td>
          </tr>
        {{/reportData}}
      </tbody>
    </table>
  </div>
</div>


<div class="admin-card mt-4">
  <div class="card-header">
    <h2><i class="fas fa-history"></i> System Logs</h2>
    <div class="log-controls">
      <select id="logDuration" class="log-duration-select">
        <option value="1">Last 1 Minute</option>
        <option value="60" selected>Last 1 Hour</option>
        <option value="1440">Last 1 Day</option>
      </select>
      <button id="getLogsBtn" class="btn btn-sm"><i class="fas fa-sync"></i> Get Logs</button>
    </div>
  </div>
  
  <div class="log-table-container">
    <table class="log-table">
      <thead>
        <tr>
          <th>Time</th>
          <th>User</th>
          <th>Event</th>
          <th>Description</th>
          <th>IP Address</th>
        </tr>
      </thead>
      <tbody id="logTableBody">
        <!-- Logs will be dynamically inserted here -->
      </tbody>
    </table>
    <div id="noLogsMessage" class="no-logs" style="display: none;">
      <i class="fas fa-info-circle fa-2x mb-2"></i><br>
      No logs found for the selected time range
    </div>
  </div>
</div>
    </div>

    <!-- Online Users + Quick Links -->
    <div class="col-lg-4 " >
      <div class="admin-card online-users-card">
        <div class="card-header">
          <h2><i class="fas fa-user-clock"></i> Online Users</h2>
          <div class="online-count">{{onlineUserCount}} Active</div>
        </div>
       
        <div class="online-users-list">
          {{#onlineUsersData}}
            <div class="online-user">
              <div class="online-user-avatar">
              {{{avatar}}}
              </div>
              
              <div class="online-user-info">
                <div class="online-user-name">{{fullname}}</div>
                <div class="online-user-role">
                  <i class="fas fa-user"></i> {{role}}
                </div>
              </div>
              <div class="online-status">Online</div>
              <div class="online-user-actions">
                {{#canmessage}}
                  <a class="action-btn" href="{{messageurl}}" title="Message {{fullname}}">
                    <i class="fas fa-envelope"></i>
                  </a>
                {{/canmessage}}
                <a href="{{profileurl}}" class="action-btn" title="View Profile">
                  <i class="fas fa-user"></i>
                </a>
              </div>
            </div>
          {{/onlineUsersData}}
          {{^onlineUsersData}}
            <p class="no-online"><i class="fas fa-user-slash"></i><br>No one online.</p>
          {{/onlineUsersData}}
        </div>
      </div>

      <div class="admin-card mt-4">
        <div class="card-header">
  <h2><i class="fas fa-bolt"></i> Quick Actions</h2>
      </div>
       
        <a href="/moodle/admin/category.php?category=roles" class="quick-link">
          <i class="fas fa-user-shield"></i> Manage Roles & Permissions
        </a>
        <a href="/moodle/admin/user.php" class="quick-link">
          <i class="fas fa-users"></i> View All Users
        </a>
        <a href="/moodle/report/modulecompletion/index.php" class="quick-link">
          <i class="fas fa-chart-bar"></i> Global Course Report
        </a>
        <a href="/moodle/report/log/index.php" class="quick-link">
          <i class="fas fa-history"></i> View System Logs
        </a>
        <a href="/moodle/course/management.php" class="quick-link">
          <i class="fas fa-book"></i> Manage Courses
        </a>

      </div>
    </div>
  </div>
</div>
<div class="modal fade" id="mailReportModal" tabindex="-1" aria-labelledby="mailReportLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="mailReportLabel">Send Report by Email</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="recipientEmail" class="form-label">Recipient Email address</label>
          <input type="email" class="form-control" id="recipientEmail" placeholder="name@example.com">
          <div id="emailHelp" class="form-text">Enter a valid email address to send the report.</div>
        </div>
        <div id="mailError" class="text-danger small" style="display:none;"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" id="sendMailConfirm" class="btn btn-primary">
          <i class="fas fa-paper-plane"></i> Send
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Add this after the "System Logs" card -->
<div class="admin-card mt-4">
  <div class="card-header">
    <h2><i class="fas fa-users"></i> User Summary</h2>
  </div>
  
  <div class="table-responsive">
    <table class="table table-striped">
      <thead>
        <tr>
          <th>Name</th>
          <th>Email</th>
          <th>Total Courses</th>
          <th>Completed</th>
          <th>In Progress</th>
          <th>Points</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        {{#userSummaries}}
        <tr>
          <td>{{firstname}} {{lastname}}</td>
          <td>{{email}}</td>
          <td>{{total_courses}}</td>
          <td>{{completed_courses}}</td>
          <td>{{inprogress_courses}}</td>
          <td>{{total_points_earned}} / {{max_total_points}}</td>
          <td>
            <a href="{{config.wwwroot}}/my/user_report.php?id={{id}}" class="btn btn-sm btn-primary">
              <i class="fas fa-eye"></i> Details
            </a>
          </td>
        </tr>
        {{/userSummaries}}
        {{^userSummaries}}
          <tr><td colspan="7">No users found</td></tr>
        {{/userSummaries}}
      </tbody>
    </table>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
      const exportBtn = document.querySelector('.btn.btn-sm.btn-danger.ms-auto');
      if (exportBtn) {
        exportBtn.addEventListener('click', exportReport);
      }

      // Log table functionality
      const logDuration = document.getElementById('logDuration');
      const getLogsBtn = document.getElementById('getLogsBtn');
      const logTableBody = document.getElementById('logTableBody');
      const noLogsMessage = document.getElementById('noLogsMessage');

      if (logDuration && getLogsBtn && logTableBody && noLogsMessage) {
        async function fetchLogs() {
          const minutes = logDuration.value;
          try {
            logTableBody.innerHTML = '<tr><td colspan="5" class="text-center py-4">Loading logs...</td></tr>';
            const response = await fetch(
              location.pathname.split('?')[0] + '?ajaxlogs=1&range=' + minutes,
              { credentials: 'same-origin' }
            );
            const text = await response.text();
            
            // Extract JSON from response text
            let jsonStart = text.lastIndexOf('[');
            let jsonEnd = text.lastIndexOf(']');
            
            if (jsonStart !== -1 && jsonEnd !== -1 && jsonEnd > jsonStart) {
              const jsonText = text.substring(jsonStart, jsonEnd + 1);
              const logs = JSON.parse(jsonText);
              
              logTableBody.innerHTML = '';
              if (logs.length === 0) {
                noLogsMessage.style.display = 'block';
                return;
              }
              noLogsMessage.style.display = 'none';
              logs.forEach(log => {
                const row = document.createElement('tr');
                row.innerHTML = `
                  <td>${log.time}</td>
                  <td>${log.user}</td>
                  <td>${log.event}</td>
                  <td>${log.description}</td>
                  <td>${log.ip}</td>
                `;
                logTableBody.appendChild(row);
              });
            } else {
              throw new Error('Invalid response format from server');
            }
          } catch (error) {
            logTableBody.innerHTML = `<tr><td colspan="5" class="text-center text-danger py-4">Error loading logs: ${error.message}</td></tr>`;
            console.error('Error fetching logs:', error);
          }
        }
        
        fetchLogs();
        getLogsBtn.addEventListener('click', fetchLogs);
        logDuration.addEventListener('change', fetchLogs);
      }
      
      // Region selection handler - FIXED
      const regionSelect = document.getElementById('regionSelect');
      if (regionSelect) {
        // Set current selection from URL parameter
        const urlParams = new URLSearchParams(window.location.search);
        const selectedRegionId = urlParams.get('regionid');
        if (selectedRegionId) {
          regionSelect.value = selectedRegionId;
        }
        
        // Handle selection change
        regionSelect.addEventListener('change', function() {
          const regionId = this.value;
          const url = new URL(window.location.href);
          url.searchParams.set('regionid', regionId);
          window.location.href = url.toString();
        });
      }
    });

    function exportReport() {
      const regionSelect = document.getElementById('regionSelect');
      const selectedOption = regionSelect.options[regionSelect.selectedIndex];
      
      // Get region name from selected option
      let regionName = selectedOption.textContent.trim();
      
      // Clean region name for filename (remove indentation spaces)
      regionName = regionName.replace(/\s+/g, '_').replace(/&nbsp;/g, '');
      
      // Prepare data for export
      const rows = [];
      
      // Add header row
      rows.push(['User', 'Course', 'Region', 'Score', 'Rating', 'Progress', 'Status']);
      
      // Add data rows
      {{#reportData}}
      rows.push([
          `"{{username}}"`,
          `"{{coursename}}"`,
          `"{{region}}"`,
          `"{{score}}%"`,
          `"{{#rating}}{{rating}} ★{{/rating}}{{^rating}}N/A{{/rating}}"`,
          `"{{progress}}%"`,
          `"{{#is_completed}}Completed{{/is_completed}}{{#is_progress}}In Progress{{/is_progress}}{{#is_review}}Needs Review{{/is_review}}"`
      ]);
      {{/reportData}}
      
      // Convert to CSV string
      const csvContent = "data:text/csv;charset=utf-8," + 
          rows.map(e => e.join(",")).join("\n");
      
      // Create download link
      const encodedUri = encodeURI(csvContent);
      const link = document.createElement("a");
      link.setAttribute("href", encodedUri);
      
      // Create filename with region name
      const dateStr = new Date().toISOString().slice(0,10);
      const filename = `report_${regionName}_${dateStr}.csv`;
      
      link.setAttribute("download", filename);
      document.body.appendChild(link);
      
      // Trigger download
      link.click();
      document.body.removeChild(link);
    }

    const moodleRoot = "http://localhost/moodle";
const mailReportBtn = document.getElementById('mailReportBtn');
const mailModal = new bootstrap.Modal(document.getElementById('mailReportModal'));
const sendMailConfirm = document.getElementById('sendMailConfirm');
const recipientEmailInput = document.getElementById('recipientEmail');
const mailError = document.getElementById('mailError');

if (mailReportBtn) {
  mailReportBtn.addEventListener('click', function() {
    recipientEmailInput.value = '';
    mailError.style.display = 'none';
    mailModal.show();
  });
}

if (sendMailConfirm) {
  sendMailConfirm.addEventListener('click', async function() {
    const regionSelect = document.getElementById('regionSelect');
    const selectedRegionId = regionSelect.value;
    const recipientEmail = recipientEmailInput.value.trim();
    mailError.style.display = 'none';

    if (!/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(recipientEmail)) {
      mailError.textContent = "Please enter a valid email address.";
      mailError.style.display = 'block';
      return;
    }

    sendMailConfirm.disabled = true;
    sendMailConfirm.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sending...';

    try {
      const response = await fetch(moodleRoot + '/my/send_report.php', {
        method: 'POST',
        credentials: 'same-origin',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          regionid: selectedRegionId,
          email: recipientEmail
        })
      });

      const contentType = response.headers.get("content-type") || "";
      if (!contentType.includes("application/json")) {
        throw new Error("Server did not return JSON. Check PHP for errors.");
      }

      const data = await response.json();
      if (data.success) {
    mailError.style.display = 'block';
    mailError.style.color = 'green';
    mailError.textContent = 'Report sent successfully to ' + recipientEmail;

    sendMailConfirm.classList.remove('btn-primary');
    sendMailConfirm.classList.add('btn-success');
    sendMailConfirm.disabled = true;
    sendMailConfirm.innerHTML = '<i class="fas fa-check"></i> Sent';

    setTimeout(() => {
        mailModal.hide();
        sendMailConfirm.disabled = false;
        sendMailConfirm.classList.remove('btn-success');
        sendMailConfirm.classList.add('btn-primary');
        sendMailConfirm.innerHTML = '<i class="fas fa-paper-plane"></i> Send';
        mailError.style.display = 'none';
    }, 6000);
}
 else {
        mailError.textContent = "Failed to send: " + data.message;
        mailError.style.display = 'block';
      }
    } catch (error) {
      console.error(error);
      mailError.textContent = "Error: " + error.message;
      mailError.style.display = 'block';
    } finally {
      sendMailConfirm.disabled = false;
      sendMailConfirm.innerHTML = '<i class="fas fa-paper-plane"></i> Send';
    }
  });
}


  </script>
 