<!DOCTYPE html>
<html>
<head>
    {{> theme_boost/head }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
    /* Carousel Styles (keep your existing carousel styles) */
    #heroCarousel {
        position: relative;
        height: 68vh;
        overflow: hidden;
             border-bottom-right-radius: 60px;
    border-bottom-left-radius: 60px;
    box-shadow: 3px 5px 3vh 8px rgb(180, 191, 207);
        
    }
.main-container{
       
        background: linear-gradient(#ffffff,  #f0f6ff);
        
}
    .carousel-inner, 
    .carousel-item {
        height: 100%;
        width: 100%;
       
    }

    .carousel-item {
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        position: relative;
       
    }

      .carousel-overlay-box {
    background-color: #fff;
    padding: 30px;
    border: 2px solid #204070;
    border-radius: 15px;
    position: absolute;
    top: 50%;
    left: 3%;
    transform: translateY(-50%);
    max-width: 50%; 
    width: 32%;
    z-index: 2;
}

/* 2XL screens and above (1536px+) - original styling */
@media (min-width: 1536px) {
    .carousel-overlay-box {
        width: 32%;
        max-width: 50%;
        left: 3%;
        padding: 30px;
    }
}

/* XL screens (1280px to 1535px) */
@media (min-width: 1280px) and (max-width: 1535px) {
    .carousel-overlay-box {
        width: 38%;
        max-width: 35%;
        left: 4%;
        padding: 20px;
        top: 40%;
    }
}

/* LG screens (1024px to 1279px) */
@media (min-width: 1024px) and (max-width: 1279px) {
    .carousel-overlay-box {
        width: 45%;
        max-width: 60%;
        left: 5%;
        padding: 20px;
        border-radius: 12px;
    }
}

/* MD screens (768px to 1023px) */
@media (min-width: 768px) and (max-width: 1023px) {
    .carousel-overlay-box {
        position: relative;
        top: auto;
        left: auto;
        transform: none;
        width: 80%;
        max-width: 90%;
        margin: 20px auto;
        padding: 18px;
        border-radius: 10px;
        border-width: 1.5px;
    }
}

/* SM screens (below 768px) */
@media (max-width: 767px) {
    .carousel-overlay-box {
        position: relative;
        top: auto;
        left: auto;
        transform: none;
        width: 90%;
        max-width: 95%;
        margin: 15px auto;
        padding: 15px;
        border-radius: 8px;
        border-width: 1px;
    }
}

.carousel-overlay-box h2 {
  font-size: 2.5rem;
  line-height: 1.2;
 
  margin-bottom: 0.5rem;
}

.carousel-overlay-box h2 span {
  color: #003366;
  font-weight: 700;
}

.carousel-overlay-box p {
  font-size: 1.25rem;
  margin-bottom: 1rem;
}

@media (max-width: 1535px) {
  .carousel-overlay-box h2 {
    font-size: 1.3rem;
    line-height: 1;
     margin-bottom: 0.2rem;
  }
  .carousel-overlay-box p {
    font-size: 1rem;
  }

  .carousel-overlay-box h2 span {
  color: #003366;
  font-weight: 400;
  font-size: 1.3rem;
  line-height: 1;
}
}

@media (max-width: 1279px) {
  .carousel-overlay-box h2 {
    font-size: 1.9rem;
  }
  .carousel-overlay-box p {
    font-size: 1rem;
  }
}

@media (max-width: 1023px) {
  .carousel-overlay-box {
    padding: 20px;
  }
  .carousel-overlay-box h2 {
    font-size: 1.6rem;
  }
  .carousel-overlay-box p {
    font-size: 0.9rem;
  }
}

@media (max-width: 767px) {
  .carousel-overlay-box {
    padding: 15px;
  }
  .carousel-overlay-box h2 {
    font-size: 1.3rem;
  }
  .carousel-overlay-box p {
    font-size: 0.85rem;
  }
}

@media (max-width: 479px) {
  .carousel-overlay-box h2 {
    font-size: 1.1rem;
  }
  .carousel-overlay-box p {
    font-size: 0.8rem;
  }
}








    /* Course Cards Overlay */
  .course-cards-overlay {
    position: relative;
    margin-top: -130px; /* Default for 2xl and above */
    z-index: 10;
    padding: 0 20px;
}

/* 2XL screens and above (1536px+) */
@media (min-width: 1536px) {
    .course-cards-overlay {
        margin-top: -130px;
        padding: 0 20px;
    }
}

/* XL screens (1280px - 1535px) */
@media (min-width: 1280px) and (max-width: 1535px) {
    .course-cards-overlay {
        margin-top: -120px;
        padding: 0 18px;
    }
}

/* LG screens (1024px - 1279px) */
@media (min-width: 1024px) and (max-width: 1279px) {
    .course-cards-overlay {
        margin-top: -90px;
        padding: 0 15px;
    }
}

/* MD screens (768px - 1023px) */
@media (min-width: 768px) and (max-width: 1023px) {
    .course-cards-overlay {
        margin-top: -60px;
        padding: 0 12px;
    }
}

/* SM screens (below 768px) */
@media (max-width: 767px) {
    .course-cards-overlay {
        margin-top: -40px;
        padding: 0 10px;
    }
}


    .course-cards-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        gap: 20px;
        max-width: 100%;
     margin: 0 auto;
    
    }

    .course-category {
        flex: 1;
        min-width: 250px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        padding: 20px;
    }

    .course-category h3 {
        color: #003366;
        margin-bottom: 15px;
        font-size: 1.2rem;
        font-weight: 600;
    }

    .course-category-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .course-category-list li {
        margin-bottom: 10px;
    }

    .course-category-list a {
        color: #555;
        text-decoration: none;
        display: flex;
        align-items: center;
        transition: all 0.2s;
    }

    .course-category-list a:hover {
        color: #003366;
        transform: translateX(5px);
    }

    .course-category-list a::before {
        content: "→";
        margin-right: 8px;
        color: #003366;
        opacity: 0;
        transition: all 0.2s;
    }

    .course-category-list a:hover::before {
        opacity: 1;
    }

    /* Buttons from Figma */
    .btn-figma {
    display: inline-block;
    padding: 10px 20px;
    border-radius: 6px;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.3s;
    margin-right: 10px;
    margin-bottom: 10px;
    font-size: 16px; /* Base font size */
}

/* 2XL screens and above (1536px+) - original styling */
@media (min-width: 1536px) {
    .btn-figma {
        padding: 10px 20px;
        font-size: 16px;
        margin-right: 10px;
        margin-bottom: 1px;
    }
}

/* XL screens (1280px - 1535px) */
@media (min-width: 1280px) and (max-width: 1535px) {
    .btn-figma {
        padding: 4px 8px;
        font-size: 12px;
        margin-right: 7px;
        margin-bottom: 9px;
    }
}

/* LG screens (1024px - 1279px) */
@media (min-width: 1024px) and (max-width: 1279px) {
    .btn-figma {
        padding: 8px 16px;
        font-size: 14px;
        margin-right: 8px;
        margin-bottom: 8px;
    }
}

/* MD screens (768px - 1023px) */
@media (min-width: 768px) and (max-width: 1023px) {
    .btn-figma {
        padding: 7px 14px;
        font-size: 13px;
        margin-right: 7px;
        margin-bottom: 7px;
    }
}

/* SM screens (below 768px) */
@media (max-width: 767px) {
    .btn-figma {
        padding: 6px 12px;
        font-size: 12px;
        margin-right: 6px;
        margin-bottom: 6px;
        display: block;      /* Stack buttons vertically on small screens */
        width: 100%;         /* Full width */
        box-sizing: border-box;
    }
}

    .btn-primary-figma {
        background-color: #003366;
        color: white;
        border: 2px solid #003366;
    }

    .btn-primary-figma:hover {
        background-color: #002244;
        color: white;
    }

    .btn-outline-figma {
        background-color: transparent;
        color: #003366;
        border: 2px solid #003366;
    }

    .btn-outline-figma:hover {
        background-color: #003366;
        color: white;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .course-cards-overlay {
            margin-top: -50px;
        }
        
        .course-category {
            min-width: 100%;
        }
        
        .carousel-overlay-box {
            width: 90%;
            max-width: 90%;
            left: 5%;
        }
    }
    /* Hide admin buttons by default */
.btn-admin {
    display: none !important;
}

/* Show admin buttons only if user has site admin menu */
body.has-admin-menu .btn-admin {
    display: inline-block !important;
}

/* Hide user buttons if admin menu exists */
body.has-admin-menu .btn-user {
    display: none !important;
}

/* Show user buttons by default */
.btn-user {
    display: inline-block !important;
}
.custom-course-grid{
    margin:20px 40px;
}
.carousel-course-btn {
    display: flex;
    margin-left:3%;
    gap: 16px;
    margin-bottom:20px;
   
}

/* 2XL screens and above (1536px+) - original */
@media (min-width: 1536px) {
    .carousel-course-btn {
        margin-left: 3%;
        gap: 16px;
        margin-bottom: 0px;
        flex-wrap: nowrap;
    }
}

/* XL screens (1280px - 1535px) */
@media (min-width: 1280px) and (max-width: 1535px) {
    .carousel-course-btn {
        margin-left: 2.5%;
        gap: 14px;
        margin-bottom: -1px;
        flex-wrap: nowrap;
    }
}

/* LG screens (1024px - 1279px) */
@media (min-width: 1024px) and (max-width: 1279px) {
    .carousel-course-btn {
        margin-left: 2%;
        gap: 12px;
        margin-bottom: 16px;
        flex-wrap: wrap; /* Wrap to next line if needed */
    }
}

/* MD screens (768px - 1023px) */
@media (min-width: 768px) and (max-width: 1023px) {
    .carousel-course-btn {
        margin-left: 1.5%;
        gap: 10px;
        margin-bottom: 14px;
        flex-wrap: wrap;
    }
}

/* SM screens (below 768px) */
@media (max-width: 767px) {
    .carousel-course-btn {
        margin-left: 1%;
        gap: 8px;
        margin-bottom: 12px;
        flex-direction: column; /* Stack buttons vertically */
        margin-left: 0; /* Remove left margin for full width */
        align-items: stretch;
    }
}




.carousel-course-btn button {
    padding: 10px 20px;
    border: none;
    border-radius: 30px;
    background: white;
    color: black;
    font-size: 16px;
    font-weight: 500;
    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.1);
    cursor: pointer;
    transition: all 0.3s ease;
}

.carousel-course-btn button:hover {
    background: #e0e0e0;
}

.carousel-course-btn button.active {
    background: #b0b0b0;
    color: #fff;
    font-weight: bold;
}
/* Fix drawer starting from the top */
#theme_boost-drawers-blocks.drawer-right {
    top: 0 !important;
    margin-top: 0 !important;
    padding-top: 0 !important;
    z-index: 1050;
    
}

/* Prevent outer containers from pushing it down */
body, #page-wrapper {
    margin-top: 0 !important;
}



.section-top-performers {
    background-image: url('/moodle/theme/academi/pix/topperformers-bg.png');

    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;
      position: relative;
  box-shadow: 0 8px 20px rgb(0 0 0 / 0.1);
}

.performer-container-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 20px;
    position: relative;
}

.performers-carousel {
    display: flex;
    gap: 9rem;
    overflow-x: auto;
    scroll-behavior: smooth;
    padding: 50px  120px;
    scrollbar-width: none;  /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
    width: 90%;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.performers-carousel::-webkit-scrollbar {
    display: none;
}

/* Responsive adjustments */
@media (max-width: 1536px) { /* <= 2xl */
    .performers-carousel {
        gap: 6rem;
        padding: 60px 80px;
        width: 95%;
    }
}

@media (max-width: 1280px) { /* <= xl */
    .performers-carousel {
        gap: 5rem;
        padding: 50px 60px;
        width: 100%;
    }
}

@media (max-width: 1024px) { /* <= lg */
    .performers-carousel {
        gap: 3rem;
        padding: 40px 40px;
    }
}

@media (max-width: 768px) { /* <= md */
    .performers-carousel {
        gap: 2rem;
        padding: 30px 20px;
    }
}

@media (max-width: 640px) { /* <= sm */
    .performers-carousel {
        gap: 1rem;
        padding: 20px 10px;
    }
}


.performer-card {
  background: #d3f4ff;  /* light blue */
  border-radius: 20px;
  border: none; /* remove main border */
  flex: 0 0 28%;
  position: relative;
  padding: 40px 30px 30px 80px;
  box-sizing: border-box;
  box-shadow:
    inset 0 4px 6px rgba(0, 0, 0, 0.15), /* inner shadow */
    2px 2px 8px rgba(0, 0, 0, 0.1); /* subtle outer shadow */
  min-width: 320px;
}

/* Large screens (lg and xl) */
@media (max-width: 1535px) {
  .performer-card {
    flex: 0 0 20%;
    padding: 10px 10px 10px 10px;
    min-width: 280px;
  }
}

/* Medium screens (tablets) */
@media (max-width: 1023px) {
  .performer-card {
    flex: 0 0 60%;
    padding: 25px 20px 20px 40px;
    min-width: 250px;
  }
}

/* Small screens (mobile landscape) */
@media (max-width: 639px) {
  .performer-card {
    flex: 0 0 80%;
    padding: 20px 15px 15px 30px;
    min-width: auto;
    margin-left: auto;
    margin-right: auto;
  }
}

/* Extra small screens (mobile portrait) */
@media (max-width: 479px) {
  .performer-card {
    flex: 0 0 95%;
    padding: 15px 10px 10px 20px;
    border-radius: 15px;
  }
}



/* Add inner border using pseudo-element */
.performer-card::before {
    content: "";
    position: absolute;
    top: 15px;             /* align with top */
    left: -16px;        /* shift 10px left outside */
    right: 16px;       /* keep right edge inside */
    bottom: -16px;      /* shift 10px down outside */
    border: 1.75px solid #204070;  /* semi-transparent blue border */
    border-radius: 20px;  /* same radius as card */
    pointer-events: none;
    box-sizing: border-box;
    z-index: 0;       /* behind main card */
}

.quote-mark.single-quote {
    position: absolute;
    top: -100px;
    right: 20px;
    font-size: 100px; /* adjust size as needed */
    color: #204070; /* subtle color */
    font-family: 'Arial', sans-serif;
    font-weight: 700;
    pointer-events: none; /* so it doesn't block clicks */
    user-select: none;
  transform: scaleX(-1) scaleY(-1);
}
.carousel-nav {
    background: none;
    border: none;
    font-weight: 600;
    color: #27408b;
    cursor: pointer;
    font-size: 2rem;
    padding: 0.5rem 1rem;
    transition: color 0.3s ease;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(255, 255, 255, 0.7);
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.carousel-nav:hover {
    color: #003366;
    background-color: rgba(255, 255, 255, 0.9);
}


.top-performer-heading{

 margin-top: 30px;
}
/* Rest of your existing performer card styles remain the same */

/* Stylish quotation marks */
.quote-mark {
    font-size: 80px;
    color: #204070;
    font-family: serif;
    position: absolute;
}

.left-quote {
    
   
}

.right-quote {
    bottom: 25px; /* lift it up */
    right: 20px;
}

/* Profile Image Overlap */
.performer-pic {
  position: absolute;
  top: 100px;    /* position relative to the card */
  left: -80px;   /* outside the card */
  width: 140px;
  height: 140px;
  border-radius: 50%;
  overflow: hidden;
  box-shadow: 0 2px 10px rgba(0,0,0,0.15);
  background: white;
}

/* Large screens (lg and xl) */
@media (max-width: 1535px) {
  .performer-pic {
    top: 90px;
    left: -65px;
    width: 90px;
    height: 90px;
  }
}

/* Medium screens (tablets) */
@media (max-width: 1023px) {
  .performer-pic {
    top: 75px;
    left: -50px;
    width: 100px;
    height: 100px;
  }
}

/* Small screens (mobile landscape) */
@media (max-width: 639px) {
  .performer-pic {
    top: 60px;
    left: -40px;
    width: 80px;
    height: 80px;
  }
}

/* Extra small screens (mobile portrait) */
@media (max-width: 479px) {
  .performer-pic {
    top: 50px;
    left: -30px;
    width: 70px;
    height: 70px;
  }
}


/* Image inside the profile */
.performer-pic img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/* Textual content inside card */
.performer-content {
    padding-left: 60px; /* to account for image overlap */
}

/* Name styling */
.performer-name {
  font-size: 2rem;  /* Default font size for large screens */
  font-weight: 700;
  color: #204070;
  margin-top: 10px;
}

/* Medium devices (tablets, 768px and up) */
@media (max-width: 1535px) {
  .performer-name {
    font-size: 1.2rem;  /* Slightly smaller font size */
    margin-top: 8px;
  }
}

/* Small devices (phones landscape, 1024px and down) */
@media (max-width: 1023px) {
  .performer-name {
    font-size: 1.6rem;  /* Smaller font size */
    margin-top: 6px;
  }
}

/* Extra small devices (phones portrait, 768px and down) */
@media (max-width: 767px) {
  .performer-name {
    font-size: 1.4rem;  /* Even smaller font size */
    margin-top: 5px;
  }
}

/* Very small devices (small phones, 480px and down) */
@media (max-width: 479px) {
  .performer-name {
    font-size: 1.2rem;  /* Smaller font size */
    margin-top: 4px;
  }
}

/* Testimonial text */
.testimonial-text {
  font-style: italic;
  margin: 12px 0;
  color: #444;
  font-size: 1.25rem;  /* Default font size for large screens */
}

/* Medium devices (tablets, 768px and up) */
@media (max-width: 1535px) {
  .testimonial-text {
    font-size: 1rem;  /* Slightly smaller font size */
    margin: 8px 0;  /* Reduced margin */
  }
}

/* Small devices (phones landscape, 1024px and down) */
@media (max-width: 1023px) {
  .testimonial-text {
    font-size: 1rem;  /* Smaller font size */
    margin: 8px 0;  /* Smaller margin */
  }
}

/* Extra small devices (phones portrait, 768px and down) */
@media (max-width: 767px) {
  .testimonial-text {
    font-size: 0.95rem;  /* Even smaller font size */
    margin: 6px 0;  /* Reduced margin */
  }
}

/* Very small devices (small phones, 480px and down) */
@media (max-width: 479px) {
  .testimonial-text {
    font-size: 0.85rem;  /* Smallest font size */
    margin: 4px 0;  /* Smallest margin */
  }
}

/* Rating Stars */
.points {
  margin-top: 10px;
  font-size: 18px;  /* Default font size */
  color: gold;
}

/* Medium devices (tablets, 768px and up) */
@media (max-width: 1535px) {
  .points {
    font-size: 16px;  /* Slightly smaller font size */
    margin-top: 0px;  /* Adjusted margin */
  }
}

/* Small devices (phones landscape, 1024px and down) */
@media (max-width: 1023px) {
  .points {
    font-size: 14px;  /* Smaller font size */
    margin-top: 6px;  /* Adjusted margin */
  }
}

/* Extra small devices (phones portrait, 768px and down) */
@media (max-width: 767px) {
  .points {
    font-size: 12px;  /* Even smaller font size */
    margin-top: 5px;  /* Reduced margin */
  }
}

/* Very small devices (small phones, 480px and down) */
@media (max-width: 479px) {
  .points {
    font-size: 11px;  /* Smallest font size */
    margin-top: 4px;  /* Smallest margin */
  }
}


/* View profile link as button */
.view-profile-link {
    display: inline-block;
    margin-top: 15px;
    font-size: 0.9rem;
    color: #204070;
    font-weight: 600;
    text-decoration: none;
    border: 1.5px solid #204070;
    border-radius: 8px;
    padding: 6px 14px;
    transition: all 0.3s ease;
}

.view-profile-link:hover {
    background: #204070;
    color: white;
    text-decoration: none;
    box-shadow: 0 4px 8px rgba(32,64,112,0.3);
}

.block_news_items,
.block_calendar_month {
    max-height: 400px !important;
    overflow-y: auto;
}

.block_news_items .card-body,
.block_calendar_month .card-body {
    max-height: 360px;
    overflow-y: auto;
}

.block_news_items::-webkit-scrollbar,
.block_calendar_month::-webkit-scrollbar {
    width: 6px;
}
.block_news_items::-webkit-scrollbar-thumb,
.block_calendar_month::-webkit-scrollbar-thumb {
    background: #ccc;
    border-radius: 4px;
}
.block_news_items .bg-announcements {
    background: url("https://cdn.pixabay.com/photo/2020/04/10/19/17/notification-5024558_960_720.png") no-repeat center;
    background-size: cover;
    padding: 20px;
    border-radius: 10px;
}
.newlink{
    margin-bottom:10px;
}

.announcement-card {
     display: flex;
    align-items: center;
    font-size: 1rem;
    padding: 20px;
    height: 130px;
     border-left: 5px solid #204070;
        padding: 15px 20px;
    margin-bottom: 20px; /* More space between announcements */
    border-radius: 15px;
    box-shadow: 0 6px 16px rgba(0,0,0,0.12); /* More visible shadow */
     background: linear-gradient(to right, #ffffff 0%, rgb(204 242 255) 100%);
    padding:30px;
    border-bottom-right-radius: 45px 45px;
    border-bottom-left-radius: 45px 45px;
}

.announcement-icon {
    width: 40px;
    height: 40px;
    background: url(https://cdn-icons-png.flaticon.com/512/1827/1827392.png) no-repeat center;
    background-size: contain;
    position: relative;
    margin-bottom: 20px;
    margin-left: 10px;
}

.announcement-icon::after {
    content: "";
    position: absolute;
    top: -5px;
    right: -5px;
    background: red;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid #fff;
}

.announcement-content {
    flex: 1;
}

.announcement-title {
    font-weight: bold;
    font-size: 1rem;
    color: #333;
    text-decoration: none;
    margin-left: 10px;
}

.announcement-title:hover {
    text-decoration: underline;
}

.announcement-meta {
    font-size: 0.85em;
    color: #777;
    margin-top: 4px;
    margin-left: 10px;
    margin-bottom: 10px;   
}

.bg-announcements ul{
    overflow: scroll;
    scrollbar-width: none;
    height: 46vh;
}
.unlist, .unlist li, .inline-list, .inline-list li, .block .list, .block .list li, .section li.movehere, .tabtree li {
    margin-bottom:20px;
  
}
/* Wrapper for the two blocks */
#block-region-content {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    justify-content: space-around;
    margin:20px
}

/* Left block (calendar) */
.block_calendar_month {
    flex: 1 1 48%;
    max-width: 600px;
}

/* Right block (announcements) */
.block_news_items {
    width: 50% !important;
    margin-left: auto !important; /* Push it to the right */
   
    padding: 20px;
}
#region-main .maincalendar .calendarwrapper td>div {
    height: 2em;
    overflow: hidden;
}
.block_news_items, .block_calendar_month {
    max-height: 500px !important;
    overflow-y: auto;
}










.newsletter-wrapper {
  display: flex;
  flex-wrap: wrap;
  margin:2%;
  align-items: stretch;
}

.newsletter-box {
  background-color: rgba(255, 255, 255, 0.95);
  position: relative;
  border-radius: 16px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  height:100%;
}

.newsletter-box .bg-texture {
  background-image: url('/moodle/theme/academi/pix/newsletterbanner.png');
  background-size: cover;
  background-position: center;
  opacity: 0.2;
  position: absolute;
  inset: 0;
  z-index: 0;
  border-radius: 16px;
}

.newsletter-box h2 {
  color: #003366;
}

.newsletter-posts {
  background-color: rgba(255, 255, 255, 0.75);
  border-radius: 16px;
  padding: 20px;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
}

/* Make sure announcements don't overflow */
.newsletter-posts .card {
  margin-bottom: 1rem;
  border-radius: 12px;
}
    .col-md-5 {
        height: 59vh;
        flex: 0 0 41.66666667%;
        max-width: 41.66666667%;
    }
.newsletter-img-wrapper {
  width: 100%;
  max-width: 300px;
  height: 220px; /* adjust height as needed */
  overflow: hidden;
  border-radius: 20px;
  margin: 0 auto;
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
  transition: transform 0.3s ease;
}

.newsletter-img {
  transition: transform 0.3s ease;
  cursor: pointer;
  display: block;
  margin: 0 auto;
}

.newsletter-img:hover {
  transform: translateY(-10px);
}


    </style>
</head>

{{#courseindex}}
  {{< theme_boost/drawer }}
    {{$id}}theme_boost-drawers-courseindex{{/id}}
    {{$drawerclasses}}drawer drawer-left {{#courseindexopen}}show{{/courseindexopen}}{{/drawerclasses}}
    {{$drawercontent}} {{{courseindex}}} {{/drawercontent}}
    {{$drawerpreferencename}}drawer-open-index{{/drawerpreferencename}}
    {{$drawerstate}}show-drawer-left{{/drawerstate}}
    {{$tooltipplacement}}right{{/tooltipplacement}}
    {{$closebuttontext}}{{#str}}closecourseindex, core{{/str}}{{/closebuttontext}}
  {{/ theme_boost/drawer}}
{{/courseindex}}

{{#hasblocks}}
  {{< theme_boost/drawer }}
    {{$id}}theme_boost-drawers-blocks{{/id}}
    {{$drawerclasses}}drawer drawer-right {{#blockdraweropen}}show{{/blockdraweropen}}{{/drawerclasses}}
    {{$drawercontent}}
      <section class="d-print-none" aria-label="{{#str}}blocks{{/str}}">
        {{{ addblockbutton }}}
        {{{ sidepreblocks }}}
      </section>
    {{/drawercontent}}
    {{$drawerpreferencename}}drawer-open-block{{/drawerpreferencename}}
    {{$forceopen}}{{#forceblockdraweropen}}1{{/forceblockdraweropen}}{{/forceopen}}
    {{$drawerstate}}show-drawer-right{{/drawerstate}}
    {{$tooltipplacement}}left{{/tooltipplacement}}
    {{$drawercloseonresize}}1{{/drawercloseonresize}}
    {{$closebuttontext}}{{#str}}closeblockdrawer, core{{/str}}{{/closebuttontext}}
  {{/ theme_boost/drawer}}
{{/hasblocks}}




<body {{{ bodyattributes }}}>

    {{> core/local/toast/wrapper}}
    <div id="page-wrapper" class="d-print-block">
        {{{ output.standard_top_of_body_html }}}
        
        {{> theme_academi/header }}

        <!-- Carousel Section -->
       <div class="main-container">

                 <div id="heroCarousel" class="carousel slide" data-ride="carousel" data-interval="3000">
            <div class="carousel-inner">
                {{#banners}}
                <div class="carousel-item {{#is_active}}active{{/is_active}}" style="background-image: url('{{image_url}}');">

                </div>
                {{/banners}}
            </div>

            <div class="carousel-overlay-box">
    <h2>Transform your <br>  <span style="color: #003366; font-weight: 750; font-size: 50px;">Learning Journey</span> <br> With <span style="color: #003366; font-weight: 700;">ALOGICDATA</span></h2>
    <p>Bringing Education to Your Fingertips</p>
    <div>
        <!-- Admin buttons -->
            <a href="{{config.wwwroot}}/course/edit.php" class="btn-figma btn-primary-figma btn-admin">Create Course</a>
            <a href="{{config.wwwroot}}/course/management.php" class="btn-figma btn-outline-figma btn-admin">Manage Courses</a>
            <a href="{{config.wwwroot}}/report/modulecompletion/index.php?" class="btn-figma btn-outline-figma btn-admin">Reports</a>

        
        <!-- User buttons -->
        <a href="{{config.wwwroot}}/my/courses.php" class="btn-figma btn-primary-figma btn-user">Explore All Courses</a> 
        <a href="{{config.wwwroot}}/calendar/view.php?view=month" class="btn-figma btn-outline-figma btn-user">My Calendar</a>
    </div>
</div>

</div>
            
            <a class="carousel-control-prev" href="#heroCarousel" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#heroCarousel" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>

        <!-- Course Cards Overlay -->
   <!-- Course Cards Section -->
<div class="course-cards-overlay">
    <div class="carousel-course-btn">
        <button class="active" data-type="new">New</button>
        <button data-type="continue">Continue Learning</button>
        <button data-type="closing">Closing Soon</button> 
    </div>
    <div class="course-cards-container">
        <div class="custom-course-grid" id="courseGrid">
            <!-- Courses will be loaded here dynamically -->
        </div>
    </div>
</div>

                <div class="section-top-performers">
    <div class="top-performer d-flex justify-content-center">
                            <h2  class="top-performer-heading">
                                Our Top <span style="color:#204070;">Performers</span> <span style="color: gold;">⭐</span>
                            </h2>
                    </div>

    <div class="performer-container-wrapper">
        <button class="carousel-nav prev-slide">&larr;</button>
        
        <div class="performers-carousel">
            {{#topperformers}}
            <div class="performer-card">
                            <div class="quote-mark single-quote">“</div>
                            <div class="performer-pic">
                            {{{picture}}}
                            </div>
                            <div class="performer-content">
                            <h4 class="performer-name">{{fullname}}</h4>
                            <p class="testimonial-text">Lorem ipsum dolor sit amet, consectetur adipiscing elit. <!-- You can replace with actual testimonials --></p>
                              <div class="points mb-1 text-dark  ">
                                Total Points: <strong>{{points}}</strong>
                            </div>
                            <div class="points">
                                ★★★★
                            </div>
                            <a href="{{profileurl}}" class="view-profile-link">View Profile</a>
                            </div>
                     
                        </div>
            {{/topperformers}}
        </div>
        
        <button class="carousel-nav next-slide">&rarr;</button>
    </div>
    </div>
    <div class="container my-5">
  <div class="row align-items-start newsletter-wrapper">
    
    <!-- Left Side: Subscribe Box -->
    <div class="col-md-5">
      <div class="newsletter-box text-center p-4 rounded-4 shadow">
        <div class="bg-texture rounded-4"></div>
        <div class="position-relative z-2">
        <img src="{{config.wwwroot}}/theme/academi/pix/Newsletter.png" alt="Newsletter Icon" 
     class=" newsletter-img top-0 start-50  mb-3" 
     style="z-index: 2; height:30vh; max-width: 100%;">

          <h5 class="mb-2 fw-semibold">Subscribe To</h5>
          <h2 class="fw-bold mb-4 text-primary">Our Newsletter!</h2>
     <div class="forum-subscription-btn mb-3">
  {{#forumsubscription}}
    <form class="forum-subscription-form" data-cmid="{{cmid}}">
      <input type="hidden" name="id" value="{{cmid}}">
      <input type="hidden" name="sesskey" value="{{sesskey}}">
      <input type="hidden" name="returnurl" value="{{config.wwwroot}}/">
      <button type="button" class="btn btn-primary px-4 py-2 rounded-pill subscription-toggle-btn"
              data-action="{{#subscribed}}unsubscribe{{/subscribed}}{{^subscribed}}subscribe{{/subscribed}}">
        {{#subscribed}}{{#str}}unsubscribe, mod_forum{{/str}}{{/subscribed}}
        {{^subscribed}}{{#str}}subscribe, mod_forum{{/str}}{{/subscribed}}
      </button>
    </form>
  {{/forumsubscription}}
</div>
        </div>
      </div>
    </div>

    <!-- Right Side: Forum Newsletter Items -->
    <div class="col-md-7">
      <div class="newsletter-posts px-2">
        {{{newsitems_html}}}
      </div>
    </div>

  </div>
</div>


      <div id="page" data-region="mainpage" data-usertour="scroller" class="drawers {{#courseindexopen}}show-drawer-left{{/courseindexopen}} {{#blockdraweropen}}show-drawer-right{{/blockdraweropen}} drag-container {{jumbotronclass}}">
            <div id="topofscroll" class="main-inner">
                <div class="drawer-toggles d-flex">
                    {{#courseindex}}
                        <div class="drawer-toggler drawer-left-toggle open-nav d-print-none">
                            <button
                                class="btn icon-no-margin"
                                data-toggler="drawers"
                                data-action="toggle"
                                data-target="theme_boost-drawers-courseindex"
                                data-toggle="tooltip"
                                data-placement="right"
                                title="{{#str}}opendrawerindex, core{{/str}}"
                            >
                                <span class="sr-only">{{#str}}opendrawerindex, core{{/str}}</span>
                                {{#pix}} t/index_drawer, moodle {{/pix}}
                            </button>
                        </div>
                    {{/courseindex}}
                    {{#hasblocks}}
                        <div class="drawer-toggler drawer-right-toggle ml-auto d-print-none">
                            <button
                                class="btn icon-no-margin"
                                data-toggler="drawers"
                                data-action="toggle"
                                data-target="theme_boost-drawers-blocks"
                                data-toggle="tooltip"
                                data-placement="right"
                                title="{{#str}}opendrawerblocks, core{{/str}}"
                            >
                                <span class="sr-only">{{#str}}opendrawerblocks, core{{/str}}</span>
                                <span class="dir-rtl-hide">{{#pix}}t/blocks_drawer, core{{/pix}}</span>
                                <span class="dir-ltr-hide">{{#pix}}t/blocks_drawer_rtl, core{{/pix}}</span>
                            </button>
                        </div>
                    {{/hasblocks}}
                </div>
                {{{ output.full_header }}}
                {{#secondarymoremenu}}
                    <div class="secondary-navigation d-print-none">
                        {{> core/moremenu}}
                    </div>
                {{/secondarymoremenu}}

                {{#isloggedin}}
                 
                    

                    
                {{/isloggedin}}

                <div id="page-content" class="pb-3 d-print-block">
                    <div id="region-main-box">
                        {{#hasregionmainsettingsmenu}}
                        <div id="region-main-settings-menu" class="d-print-none">
                            <div>{{{ regionmainsettingsmenu }}}</div>
                        </div>
                        {{/hasregionmainsettingsmenu}}
                        <section id="region-main" aria-label="{{#str}}content{{/str}}">
                            {{#hasregionmainsettingsmenu}}
                                <div class="region_main_settings_menu_proxy"></div>
                            {{/hasregionmainsettingsmenu}}
                            {{{ output.course_content_header }}}
                            {{#headercontent}}
                                {{> core/activity_header }}
                            {{/headercontent}}
                            {{#overflow}}
                                <div class="container tertiary-navigation">
                                    <div class="navitem">
                                        {{> core/url_select}}
                                    </div>
                                </div>
                            {{/overflow}}
                            {{{ output.main_content }}}
                            {{{ output.activity_navigation }}}
                            {{{ output.course_content_footer }}}
                        </section>
                    </div>
                </div>
            </div>
            {{> theme_academi/footer }}
        </div>
        {{{ output.standard_after_main_region_html }}}
    </div>
{{#showpopup}}
<div id="customPopup" class="popup-overlay" style="display: none;">
  <div class="popup-content" style="
      background: white;
      padding: 30px;
      border-radius: 10px;
      max-width: 500px;
      margin: auto;
      position: relative;
      box-shadow: 0 5px 15px rgba(0,0,0,0.3);
  ">
    <button class="btn-close" onclick="closePopup()" style="
        position: absolute;
        top: 10px;
        right: 10px;
        background: none;
        border: none;
        font-size: 24px;
        cursor: pointer;
    ">&times;</button>
    <img src="{{alert_gif}}" alt="Alert" style="max-width: 100%; margin-bottom: 20px;" />
    <h3>Important Notice</h3>
    <p>{{popupmessage}}</p>
    <button onclick="redirectToCreateCourse()" style="
        background: #003366;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        margin-top: 10px;
        cursor: pointer;
    ">Create Course</button>
  </div>
</div>
{{/showpopup}}

     <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>

const MOODLE_WWWROOT = '{{config.wwwroot}}';
    document.addEventListener('DOMContentLoaded', function() {

    // Function to render courses
    function renderCourses(courses) {
    const courseGrid = document.getElementById('courseGrid');
    courseGrid.innerHTML = '';

    // Limit to first 4 courses
    const limitedCourses = courses.slice(0, 4);
limitedCourses.forEach(course => {
    const courseCard = document.createElement('div');
    courseCard.className = 'custom-course-card';
    courseCard.style.cursor = 'pointer';  // show it’s clickable

    courseCard.innerHTML = `
        <div class="custom-course-card-image">
            <img src="${course.course_image_url}" alt="${course.course_name}">
        </div>
        <div class="custom-course-content">
            <h3 class="custom-course-title">${course.course_name}</h3>
            <a href="${course.course_url}" class="course-card-link"><span>Explore Course</span></a>
        </div>
    `;

    // Redirect when anywhere on the card is clicked
    courseCard.addEventListener('click', () => {
        window.location.href = course.course_url;
    });

    courseGrid.appendChild(courseCard);
});

}


    // Set active button    
    function setActiveButton(activeBtn) {
        document.querySelectorAll('.carousel-course-btn button').forEach(btn => {
            btn.classList.remove('active');
        });
        activeBtn.classList.add('active');
    }

    // Fetch courses dynamically
    async function fetchCourses(type) {
        const courseGrid = document.getElementById('courseGrid');
        courseGrid.innerHTML = '<div class="text-center py-4">Loading courses...</div>';
        
        try {
            const response = await fetch(`${MOODLE_WWWROOT}/theme/academi/layout/getcourses.php?type=${type}`, {
                credentials: 'include'
            });
            
            if (!response.ok) throw new Error('Network response was not ok');
            
            const data = await response.json();
            renderCourses(data);
        } catch (error) {
            console.error('Error fetching courses:', error);
            courseGrid.innerHTML = `
                <div class="col-12 text-center py-5">
                    <h4>Error loading courses</h4>
                    <p>${error.message}</p>
                </div>
            `;
        }
    }

    // Handle button clicks
    function handleButtonClick(button) {
        setActiveButton(button);
        const type = button.getAttribute('data-type');
        fetchCourses(type);
    }

    // Initial load
    const initialButton = document.querySelector('.carousel-course-btn button[data-type="new"]');
    if (initialButton) {
        handleButtonClick(initialButton);
    }

    // Set event listeners
    document.querySelectorAll('.carousel-course-btn button').forEach(button => {
        button.addEventListener('click', () => {
            handleButtonClick(button);
        });
    });
});
   document.addEventListener('DOMContentLoaded', function() {
  // Handle forum subscription toggles
  document.querySelectorAll('.subscription-toggle-btn').forEach(btn => {
    btn.addEventListener('click', function(e) {
      e.preventDefault();
      const form = this.closest('form');
      const cmid = form.dataset.cmid;
      const action = this.dataset.action;
      const formData = new FormData(form);
      
      // Show loading state
      this.disabled = true;
      this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
      
      // Send AJAX request
      fetch(M.cfg.wwwroot + '/mod/forum/subscribe.php', {
        method: 'POST',
        body: formData
      })
      .then(response => response.text())
      .then(data => {
        // Toggle button state
        const newAction = action === 'subscribe' ? 'unsubscribe' : 'subscribe';
        this.dataset.action = newAction;
        this.innerHTML = newAction === 'subscribe' ? 
          '{{#str}}subscribe, mod_forum{{/str}}' : 
          '{{#str}}unsubscribe, mod_forum{{/str}}';
          
        // Update UI classes if needed
        if(newAction === 'subscribe') {
          this.classList.remove('btn-danger');
          this.classList.add('btn-primary');
        } else {
          this.classList.remove('btn-primary');
          this.classList.add('btn-danger');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        // Show error message
        require(['core/notification'], function(Notification) {
          Notification.addNotification({
            message: 'Failed to update subscription',
            type: 'error'
          });
        });
      })
      .finally(() => {
        this.disabled = false;
      });
    });
  });
});


    document.querySelectorAll('[data-toggler="drawers"]').forEach(button => {
    button.addEventListener('click', function () {
        const targetId = this.getAttribute('data-target');
        const drawer = document.getElementById(targetId);
        if (drawer) {
            drawer.classList.toggle('show');
        }
    });
});

    document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll('[data-toggler="drawers"]').forEach(button => {
        button.addEventListener('click', function () {
            const targetId = this.getAttribute('data-target');
            const drawer = document.getElementById(targetId);
            if (drawer) {
                drawer.classList.toggle('show');
            }
        });
    });
});

   document.addEventListener("DOMContentLoaded", function() {
    // Check if admin menu exists
    const isAdmin = document.querySelector('[data-key="siteadminnode"]') !== null;
    
    if (isAdmin) {
        document.body.classList.add('has-admin-menu');
        console.log("Admin user detected");
    } else {
        console.log("Regular user detected");
    }
});
    function closePopup() {
    let popup = document.getElementById("customPopup");
    popup.style.animation = "fadeOut 0.5s ease-out forwards";
    setTimeout(() => {
        popup.style.display = "none";
    }, 500);
}


    function redirectToCreateCourse() {
        window.location.href = window.location.origin + "/moodle/course/edit.php";
    }

    document.addEventListener("DOMContentLoaded", function () {
        var showPopup = {{showpopup}};
        if (showPopup) {
            let popup = document.getElementById("customPopup");
            popup.style.display = "flex";
        }
    });

    document.addEventListener("DOMContentLoaded", function() {
        function createGaugeChart(canvasId, textId, value) {
            let canvas = document.getElementById(canvasId);
            if (!canvas) return;
            let progressValue = parseFloat(canvas.getAttribute('data-progress')) || 0;
            let ctx = canvas.getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Completed', 'Remaining'],
                    datasets: [{
                        data: [progressValue, 100 - progressValue],
                        backgroundColor: ['green', 'lightgray']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    cutout: '70%',
                    plugins: {
                        legend: { display: false }
                    }
                }
            });
            document.getElementById(textId).innerText = progressValue.toFixed(2) + "%";
        }
        createGaugeChart('learningPathChart', 'learningPathText');
        createGaugeChart('curriculumChart', 'curriculumText');
    });

    document.addEventListener("DOMContentLoaded", function () {
        const courses = document.querySelectorAll(".custom-course-card");
        const loadMoreBtn = document.getElementById("loadMoreBtn");
        let visibleCourses = 4;
        courses.forEach((course, index) => {
            if (index >= visibleCourses) {
                course.style.display = "none";
            }
        });
        loadMoreBtn.addEventListener("click", function () {
            if (loadMoreBtn.innerText === "Load More") {
                let nextCourses = visibleCourses + 4;
                courses.forEach((course, index) => {
                    if (index < nextCourses) {
                        course.style.display = "flex";
                    }
                });
                visibleCourses = nextCourses;
                if (visibleCourses >= courses.length) {
                    loadMoreBtn.innerText = "See Less";
                }
            } else {
                visibleCourses = 4;
                courses.forEach((course, index) => {
                    if (index >= visibleCourses) {
                        course.style.display = "none";
                    }
                });
                loadMoreBtn.innerText = "Load More";
            }
        });
    });
 
    document.querySelectorAll('.carousel-course-btn button').forEach(btn => {
        btn.addEventListener('click', () => {
            document.querySelectorAll('.carousel-course-btn button').forEach(b => b.classList.remove('active'));
            btn.classList.add('active');
        });
    });

document.addEventListener('DOMContentLoaded', function() {
  const carousel = document.querySelector('.performers-carousel');
  document.querySelector('.next-slide').addEventListener('click', function() {
    carousel.scrollBy({ left: carousel.offsetWidth, behavior: 'smooth' });
  });
  document.querySelector('.prev-slide').addEventListener('click', function() {
    carousel.scrollBy({ left: -carousel.offsetWidth, behavior: 'smooth' });
  });
});


document.addEventListener('DOMContentLoaded', function() {
  const buttons = document.querySelectorAll('.carousel-course-btn button');
  const courseGrid = document.getElementById('courseGrid');

  function renderCourses(courses) {
    courseGrid.innerHTML = '';  // clear existing courses
    courses.forEach(course => {
      const courseCard = document.createElement('div');
      courseCard.className = 'custom-course-card';

      courseCard.innerHTML = `
        <div class="custom-course-card-image">
          <img src="${course.course_image_url}" alt="${course.course_name}">
        </div>
        <div class="custom-course-content">
          <h3 class="custom-course-title">${course.course_name}</h3>
          <a href="${course.course_url}" class="course-card-link"><span>Explore Course</span></a>
        </div>
      `;
      courseGrid.appendChild(courseCard);
    });
  }

  buttons.forEach(btn => {
    btn.addEventListener('click', function() {
      buttons.forEach(b => b.classList.remove('active'));
      this.classList.add('active');

      const type = this.getAttribute('data-type');

      // IMPORTANT: This URL must point to your PHP AJAX file
      fetch(`/theme/academi/layout/getcourses.php?type=${type}`)
        .then(response => response.json())
        .then(data => {
          renderCourses(data);
        })
        .catch(err => {
          console.error('Failed to fetch courses:', err);
        });
    });
  });
});

    </script>
</body>
</html>